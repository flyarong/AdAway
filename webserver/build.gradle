apply plugin: 'com.android.library'

android {
    compileSdkVersion 30
    buildToolsVersion '30.0.1'
    ndkVersion '21.3.6528147'

    defaultConfig {
        minSdkVersion 26
        targetSdkVersion 30
    }

    buildFeatures {
        buildConfig = false
    }

    externalNativeBuild {
        ndkBuild {
            path 'jni/Android.mk'
        }
    }

    sonarqube {
        skipProject = true
    }
}

dependencies {
    implementation 'com.android.ndk.thirdparty:openssl:1.1.1g-alpha-1'
}

/**
 * Task to rename executables from hello_world to libhello_world_exec.so
 * If they look like libraries, they are packaged in the apk and deployed on the device in the lib folder!
 *
 * Help with files: https://docs.gradle.org/current/userguide/working_with_files.html
 * Implementation from: https://gitlab.com/fengshaun/syncopoli/blob/master/app/build.gradle
 */
gradle.taskGraph.afterTask { task ->
    if (task.name == "externalNativeBuildRelease" || task.name == "externalNativeBuildDebug") {
        def mode = task.name == "externalNativeBuildDebug" ? "debug" : "release"
        def buildFolder = file("${buildDir}/intermediates/ndkBuild/${mode}/obj/local/")

        copy {
            from(buildFolder) {
                exclude "**/objs"
                exclude "**/objs-debug"
                exclude "**/*.a"
                exclude "**/*.d"
                exclude "**/*.o"
                exclude "**/*.so"
                exclude "**/*.txt"
            }

            into buildFolder

            rename '(.+)', 'lib$1_exec.so'

            eachFile {
                println "Replacing " + it.getPath() + " from ndkBuild directory"
            }
        }
    }
}
